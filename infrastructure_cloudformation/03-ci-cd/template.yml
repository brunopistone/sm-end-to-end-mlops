AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD MLOps
Parameters:
  ModelPackageGroupName:
    Type: String
    Description: Model Package Group Name
    Default: ''

  PipelineSuffix:
    Type: String
    Description: Suffix for the pipeline names
    Default: ''

  RepositoryTrainingName:
    Type: String
    Description: CodeCommit repository name for training

  RepositoryDeploymentName:
    Type: String
    Description: CodeCommit repository name for deployment
    Default: ''

  S3BucketArtifacts:
    Type: String
    Description: S3 Bucket for ML artifacts
    Default: ''

Conditions:
  ModelPackageGroupNameEmpty: !Equals
    - !Ref ModelPackageGroupName
    - ''
  PipelineSuffixEmpty: !Equals
    - !Ref PipelineSuffix
    - ''
  S3BucketArtifactsEmpty: !Equals
    - !Ref S3BucketArtifacts
    - ''

Resources:
  S3BucketCode:
    Type: 'AWS::S3::Bucket'
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  CodeRepositoryTraining:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: !Ref RepositoryTrainingName

  CodeRepositoryDeployment:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: !Ref RepositoryDeploymentName

  CodePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:*'
              - 'cloudwatch:*'
              - 'codebuild:*'
              - 'codecommit:*'
              - 'codedeploy:*'
              - 'kms:CreateGrant'
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:ReEncrypt'
              - 'kms:GenerateDataKey'
              - 'logs:*'
              - 's3:*'
              - 'sts:AssumeRole'
              - 'sts:GetCallerIdentity'
            Resource:
              - '*'

  CodeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Ref CodePolicy

  ### Policy for CI/CD Automation ###

  AutomationPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "cloudformation:*"
              - "cloudwatch:*"
              - "codebuild:*"
              - "codecommit:*"
              - "codedeploy:*"
              - "ec2:CreateNetworkInterface"
              - "ec2:CreateNetworkInterfacePermission"
              - "ec2:DeleteNetworkInterface"
              - "ec2:DeleteNetworkInterfacePermission"
              - "ec2:DescribeDhcpOptions"
              - "ec2:DescribeNetworkInterfaces"
              - "ec2:DescribeRouteTables"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeSubnets"
              - "ec2:DescribeVpcEndpoints"
              - "ec2:DescribeVpcs"
              - "iam:PassRole"
              - "kms:CreateGrant"
              - "kms:Decrypt"
              - "kms:DescribeKey"
              - "kms:Encrypt"
              - "kms:ReEncrypt"
              - "kms:GenerateDataKey"
              - "lambda:*"
              - "logs:*"
              - "s3:*"
              - "sagemaker:*"
              - "ssm:*"
              - "states:*"
              - "sts:AssumeRole"
            Resource:
              - "*"

  ### Role for CI/CD Automation ###

  AutomationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: ci-cd-automation-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
      Path: /
      ManagedPolicyArns:
        - !Ref AutomationPolicy

  BuildProjecTrainingtDev:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CROSS_ACCOUNT_ROLE
            Value: !GetAtt AutomationRole.Arn
          - Name: ENV
            Value: dev
          - Name: S3_BUCKET_NAME
            Value: !If
              - S3BucketArtifactsEmpty
              - !Sub '{{resolve:ssm:/s3/bucket/ml}}'
              - !Ref S3BucketArtifacts
      ServiceRole: !Ref CodeRole
      TimeoutInMinutes: 480
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE

  BuildProjectDeploymentDev:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:5.0'
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CROSS_ACCOUNT_ROLE
            Value: !GetAtt AutomationRole.Arn
          - Name: ENV
            Value: dev
          - Name: S3_BUCKET_NAME
            Value: !If
              - S3BucketArtifactsEmpty
              - !Sub '{{resolve:ssm:/s3/bucket/ml}}'
              - !Ref S3BucketArtifacts
      ServiceRole: !Ref CodeRole
      TimeoutInMinutes: 480
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE

  CodePipelineTrainingDev:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !If
        - PipelineSuffixEmpty
        - PipelineTrainingDev
        - !Sub 'PipelineTrainingDev-${PipelineSuffix}'
      RoleArn: !GetAtt
        - CodeRole
        - Arn
      ArtifactStore:
        Location: !Ref S3BucketCode
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt
                  - CodeRepositoryTraining
                  - Name
                PollForSourceChanges: true
              Name: source
              OutputArtifacts:
                - Name: MLPipelineSourceArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProjecTrainingtDev
              InputArtifacts:
                - Name: MLPipelineSourceArtifact
              Name: build
              OutputArtifacts:
                - Name: ModelBuildBuildArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1

  CodePipelineDeploymentDev:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !If
        - PipelineSuffixEmpty
        - PipelineDeploymentDev
        - !Sub 'PipelineDeploymentDev-${PipelineSuffix}'
      RoleArn: !GetAtt
        - CodeRole
        - Arn
      ArtifactStore:
        Location: !Ref S3BucketCode
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt
                  - CodeRepositoryDeployment
                  - Name
                PollForSourceChanges: true
              Name: source
              OutputArtifacts:
                - Name: MLPipelineSourceArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProjectDeploymentDev
              InputArtifacts:
                - Name: MLPipelineSourceArtifact
              Name: build
              OutputArtifacts:
                - Name: ModelBuildBuildArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1

  ### EventBridge Rule

  EventBridgeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: events.amazonaws.com

  EventBridgeDefaultIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: "codepipeline:StartPipelineExecution"
            Effect: Allow
            Resource:
              - !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineDeploymentDev}"
      PolicyName: EventBridgeDefaultIAMPolicy
      Roles:
        - !Ref EventBridgeRole

  EventBridgeRuleDeploy:
    Type: AWS::Events::Rule
    Properties:
      Description: Check Model Package changes
      EventPattern:
        detail:
          ModelPackageGroupName: !If
            - ModelPackageGroupNameEmpty
            - - '{{resolve:ssm:/sagemaker/model/package/group}}'
            - - !Ref ModelPackageGroupName
          ModelApprovalStatus:
            - Approved
        detail-type:
          - SageMaker Model Package State Change
        source:
          - aws.sagemaker
      Name: deployment-pipeline-rule
      State: ENABLED
      Targets:
        - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineDeploymentDev}"
          Id: Target0
          RoleArn: !GetAtt
            - EventBridgeRole
            - Arn
